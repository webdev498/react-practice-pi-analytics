// Copyright (c) 2016 Practice Insight Pty Ltd. All rights reserved.

syntax = "proto3";
package cite_service;
option java_package = "pi.ip.data.citation.generated";
option java_multiple_files = true;
option go_package = "licensingalert";

import "patent_common.proto";

service CiteService {

    rpc AddPatAppRepresentative (AddPatAppRepresentativeRequest) returns (PatAppRepresentativeAdded) {
    }

    rpc RemovePatAppRepresentative (RemovePatAppRepresentativeRequest) returns (PatAppRepresentativeRemoved) {
    }

    // called from ip-data-names: update Applicant if new/updated for family grouping
    // was changed.  The information will only be acted on if family id is being tracked.
    rpc NotifyApplicantChange (stream FamilyMsg) returns (AckResponse) {
    }

    rpc DirectCiteUpdate (DirectCite) returns (AckResponse) {

    }

    //look up "prod:familyHealth" to get latest pac health info
    rpc LookupPacHealth (FamilyMsg) returns (PacHealthResponse) {
    }

    rpc LookupNcPhase (FamilyMsg) returns (CasePhaseResponse) {
    }

    // If health state has new/changed, call PacHealthUpdate
    rpc PacHealthUpdate (FamilyHealth) returns (AckResponse) {
    }

    rpc NcPhaseUpdate (FamilyPhase) returns (AckResponse) {

    }
}

message DirectCite {
    // unique key is items 1-4
    int64 nc_fam_id = 1;
    int64 pac_fam_id = 2;
    string pac_uni_pat_num = 3;
    string nc_uni_pat_num = 4;
    // `ratchet` to highest known value
    CiteType cite_type = 5;
    // set to zero to indicate that the date is unknown
    int32 cited_date = 6;
}

message DirectCiteComplete {
    // business primary key
    string nc_uni_pat_num = 1;
    string pac_uni_pat_num = 2;

    // info about the citation
    CiteType cite_type = 3;
    int32 cited_date = 4;

    // new case phase
    CasePhase nc_case_phase = 6;

    // if first cited date is missing, we use latest publication date of the case
    int32 nc_published_latest = 5;

    // current health of pac
    PacHealth pac_health = 7;
}
message FamilyPhase {
    int64 family_id = 1;
    CasePhase case_phase = 2;
}
message FamilyHealth {
    int64 family_id = 1;
    PacHealth pac_health = 2;
}

message PatentHealth {
    int64 family_id = 1;
    string uni_pat_num = 2;
    int64 calculatedAt = 3; //in yyyyMMdd
    int64 sourceDataDate = 4; //in yyyyMMdd
    PacHealth pat_health_status = 5;
}

message PacHealthResponse {
    PacHealth pac_health = 1;
}

message CasePhaseResponse {
    CasePhase case_phase = 2;
}

message CiteFamilyLink {
    int64 nc_fam_id = 1;
    int64 pac_fam_id = 2;
    repeated DirectCiteComplete direct_cite = 3;

    // meta data for display purposes
    string nc_invention_title = 4;
    string pac_invention_title = 5;
}

service CiteDatastoreUpdateService {
    // called from main citation-dataflows runner
    rpc UpsertDocDbCitation (UpsertDocDbCitationRequest) returns (UpsertDocDbCitationResponse) {
    }
}

// ---- RepresentativeUpdate

message AddPatAppRepresentativeRequest {
    string uni_pat_num = 1;
    LawFirm law_firm = 2;
}

message PatAppRepresentativeAdded {
}

message RemovePatAppRepresentativeRequest {
    string uni_pat_num = 1;
    int64 law_firm_id = 2;
}

message PatAppRepresentativeRemoved {
}

// ---- PacHealth

// This enum really stands for "PatHealthStatus" and is used for more than just Prior Art Patents
enum PacHealth {
    // see pi.ip.data.citation.model.PriorArtCitedHealth
    UNKNOWN = 0;
    ALIVE = 50;
    LAPSED = 100;
}

enum CasePhase {
    Published = 0;
    Accepted = 50;
}

enum CiteType {
    // Unknown
    Unclassified = 0;

    // Theory or principle underlying the invention
    Theory = 10;

    // Technological background
    TechBackground = 20;

    // Cited in the application
    CitedInApplication = 30;

    // relevant if combined with another document
    RelevantIfCombined = 40;

    // particularly relevant if taken alone
    HighlyRelevant = 50;
}

// ---- Citation info from DocDb XML

message CitationInfo {

    string nc_uni_pat_num = 1;
    int64 nc_family_id = 2;
    string nc_title = 3;

    string pac_country = 4;
    int64 pac_doc_id = 5;
    string pac_kind = 6;
    string pac_name = 7;
    string pac_doc_number = 8;

    // 0 is used for null value otherwise yyyyMMdd
    int32 pac_date = 9;

    // 0 is used for null value otherwise yyyyMMdd
    int32 cited_date = 10;

    CiteType cite_type = 11;

    PatNumType pac_num_type = 12;

    // usually this is the EPODOC format of the publication
    string pac_num_ed = 13;

    string citation_element = 14;
}

message UpsertDocDbCitationRequest {
    CitationInfo citation_info = 1;
}

message UpsertDocDbCitationResponse {
    // throws exception on failure
}

