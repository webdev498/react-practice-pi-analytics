buildscript {
    repositories {
        maven {
            credentials {
                username 'pidev'
                password '3kdv3Wua'
            }
            url 'http://nexus.priv.practiceinsight.io/nexus/content/groups/internal/'
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
    }
}

plugins {
    // used to support immutables annotation processor
    id 'net.ltgt.apt' version '0.10' apply false
}

group 'pi.analytics'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: "net.ltgt.apt"
apply plugin: 'application'
apply plugin: 'distribution'
apply plugin: 'idea'

sourceCompatibility = 1.8

distributions {
    mainClassName = 'pi.analytics.admin.serviceaddress.server.ServiceAddressSortingServerLauncher'
    archivesBaseName = 'service-address-admin-backend'
    version = 'latest'
    main {
        baseName = 'service-address-admin-backend'
    }
}

repositories {
    maven {
        credentials {
            username 'pidev'
            password '3kdv3Wua'
        }
        url 'http://nexus.priv.practiceinsight.io/nexus/content/groups/internal/'
    }
}

dependencies {
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.cloud:google-cloud-translate:0.17.1-beta'
    compile('com.practice-insight:pi-common-core:1.2-SNAPSHOT') {
        changing = true
    }
    compile('com.practice-insight:pi-common-config:1.2-SNAPSHOT') {
        changing = true
    }
    compile('com.practice-insight:pi-common-log:1.2-SNAPSHOT') {
        changing = true
    }
    compile 'io.grpc:grpc-netty:1.3.0'
    compile 'io.grpc:grpc-protobuf:1.3.0'
    compile 'io.grpc:grpc-stub:1.3.0'

    // Annotation processor
    compileOnly 'org.immutables:value:2.4.4:annotations'
    apt 'org.immutables:value:2.4.4'

    // Logging related
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'ch.qos.logback:logback-core:1.1.8'
    compile 'ch.qos.logback:logback-classic:1.1.8'
    compile 'org.codehaus.janino:janino:2.6.1'

    // Metrics and liveness
    compile 'io.prometheus:simpleclient:0.0.21'
    compile 'io.prometheus:simpleclient_common:0.0.21'
    compile 'org.nanohttpd:nanohttpd:2.3.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'com.github.javafaker:javafaker:0.12'
    testCompile 'com.practice-insight:pi-common-test-core:1.2-SNAPSHOT'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.assertj:assertj-core:3.6.2'
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs 'src/main/java', 'src/generated/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.3.0'
        }
    }
    generateProtoTasks.generatedFilesBaseDir = "${projectDir}/src/generated"
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

test {
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    useJUnit {
        // run all except slow or disabled tests
        excludeCategories 'com.pi.common.test.type.SlowTests'
        excludeCategories 'com.pi.common.test.type.DisabledTests'
    }
}

task slowTests(type: Test) {
    beforeTest { descriptor ->
        logger.lifecycle("Running slowTest: " + descriptor)
    }
    useJUnit {
        // specific task to run slow tests (only)
        includeCategories 'com.pi.common.test.type.SlowTests'
    }
}

clean {
    delete "${projectDir}/src/generated"
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}
